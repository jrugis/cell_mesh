http://perso.uclouvain.be/vincent.legat/teaching/data/meca2170-GmshCompanion.pdf

~/Downloads/CGAL-4.9/examples/Mesh_3/mesh_3D_image_with_features

There is a non documented header include/CGAL/IO/Complex_3_in_triangulation_3_to_vtk.h 


**********************************************
**********************************************
WORKFLOW
***************
photoshop: create segmented layers, export segmented layers as files
  cells.psd <- images
  -> layers/cells_00x_xxa.tif

bash: combine segmented layers into tiff stacK
  bash ./convert.sh
  -> layers/cells.tif, layers/cellsN.tif

python: reduce image stack (and check for errors)
  python voxels.py <- layers/cellsN.tif
  -> layers/cellsN8R.tif

python create polylines file
  python vox_geometry.py <- layers/cellsN8R.tif
  -> geometry/polylines.txt

python: convert tiff stack to inr format
  python tif2inr.py <- layers/cellsNx.tif
  -> mesh3d/cellsx.inr

CGAL: create mesh with (or without) constraints
  ~/Downloads/CGAL-4.9/examples/Mesh_3/mesh_3D_image_with_features mesh3d/cells.inr geometry/polylines.txt 0.6 0.6 0.4 0.8
      <- mesh3d/cells.inr, geometry/polylines.txt 
  ~/Downloads/CGAL-4.9/examples/Mesh_3/mesh_3D_image cellsx.inr 0.6 0.4 0.8
      <- mesh3d/cellsx.inr
  -> out.mesh 

medit: view the mesh
  ~/Downloads/medit-2.3-linux out.mesh

paraview: check mesh and polylines alignment  
  python mesh2vtk.py
  python poly2vtk.py

**********************************************
**********************************************
TESTING
***********
python: (testing) convert reduced image stack to vtk's for ParaView
  python vox2vtk.py <- layers/cellsNxR.tif
  -> layers/cellsNxRxxx.vtu

paraview: (testing) view files
  layers/check_xx.pvsm

***********
python: check adjacency and create quad boundry mesh
  python vox_adjacency.py <- layers/cellsNxR.tif
  -> bounding.msh

gmsh: convert quad bounding mesh to stl format
  gmsh bounding.msh -2 -o bounding.stl -format stl -saveall

blender: smooth and export bounding stl
  smooth_00.blend
  -> boundingS.stl

gmsh: create the 3D mesh
  gmsh remesh.geo <- boundingS.stl
  -> remesh.msh

gmsh: view the 3D mesh
  gmsh remesh.msh

python: extract geometry
  python vox_geometry.py
  -> geometry/cellsNxR.vtu
  -> geometry/cells.geo

paraview: (testing) view geometry
  geometry/geometry_xx.pvsm

**********************************************
**********************************************

http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2805160/
http://www.cgal.org/
http://cvcweb.ices.utexas.edu/cvcwp/
http://imagej.net/TrakEM2

fiji
  Profile - for cells
  Treeline or AreaTree - for lumen


